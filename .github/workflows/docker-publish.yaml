name: Build Docker Images

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo with submodules
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine latest tag in submodule
        id: submodule
        run: |
          cd "$SUBMODULE_PATH"
          git fetch --tags --quiet
          LATEST_TAG=$(git tag --sort=-v:refname | head -n1)
          
          echo "latest_tag=$LATEST_TAG" >> "$GITHUB_OUTPUT"

      - name: Get current Docker Hub latest tag
        id: hub
        run: |
          HUB_TAG=$(curl -fsSL "https://hub.docker.com/v2/repositories/${IMAGE_NAME}/tags/?page_size=100" \
            | jq -r '.results[].name' | grep -E '^v?[0-9]+\.[0-9]+' | sort -Vr | head -n1 || true)
          
          echo "hub_tag=$HUB_TAG" >> "$GITHUB_OUTPUT"
          
          echo "Current tag on Docker Hub: $HUB_TAG"
          echo "Latest tag in repo: ${{ steps.submodule.outputs.latest_tag }}"

      - name: Compare versions
        id: compare
        run: |
          TAG_REPO="${{ steps.submodule.outputs.latest_tag }}"
          TAG_HUB="${{ steps.hub.outputs.hub_tag }}"
          should_build=false

          # When no tag in Docker Hub exists â†’ build
          if [[ -z "$TAG_HUB" ]]; then
            should_build=true
          elif dpkg --compare-versions "$TAG_REPO" gt "$TAG_HUB"; then
            should_build=true
          fi

          echo "should_build=$should_build" >> "$GITHUB_OUTPUT"
          echo "Decision: should_build=$should_build"

      - name: Always build and push nightly
        run: |
          chmod +x build-images.sh
          ./build-images.sh --push --only-nightly

      - name: Conditionally build latest/tag images
        if: steps.compare.outputs.should_build == 'true'
        run: |
          ./build-images.sh --push --only-release
